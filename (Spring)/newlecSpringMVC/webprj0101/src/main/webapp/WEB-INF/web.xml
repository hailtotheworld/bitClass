<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0" metadata-complete="false"> <!-- metadata-complete="false"여야지만 어노테이션을 읽는다 -->


<listener> <!--<listener>는 톰캣,세션이 시작되거나 끝날때 뭔가 행위할수있는 이벤트를 처리할수있는거다 -->
  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
</listener>
<context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>
	/WEB-INF/spring/service-context.xml
	/WEB-INF/spring/security-context.xml
  </param-value>              <!-- ㄴ분할한파일명은 완전 내마음대로 정할수있다. -->
</context-param>

<servlet>
  <servlet-name>dispatcher</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
               <!-- 이 DispatcherServlet가 listener를 갖다쓸수있다. -->
  <init-param> <!-- <init-param> 이방식으로는 파일을 하나만 지정할수있다. -->
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring/servlet-context.xml</param-value>
  </init-param>
  <load-on-startup>1</load-on-startup>
<!--
-모든 서블릿은 url매핑이 되어있고, 첫 url요청이 왔을때 서블릿이 메모리에 올라간다.
-지금 이 DispatcherServlet은 설정을 다루는 부분이니까, url매핑이 되기전에 우선 로드되는게 좋겠지.
 첫 url요청이 올 때 DispatcherServlet가 메모리에 올라가면  첫요청에서는 많이 느린속도를 보이게 된다.
-<load-on-startup>이 로드되는건 톰캣을 의미하며, 톰캣이 시작될때 이 서블릿을 로드하고 싶다고할때 설정하는거다.
 톰캣이 로드될때 같이 로드하고 싶은 서블릿이 여러개있으면 우선순위를 숫자를 지정해서 둘수있다.(1이 가장높은 우선순위) -->
  <async-supported>true</async-supported>
<!-- 
-이 서블릿이 로드되는게 다른것들과 연관해서 동기적으로 하나씩하나씩 줄서서 로드하는 과정을 겪지않고,
 비동기적으로 로드되는걸 원할때 적어주면된다. (async: asynchronous 비동기) -->
</servlet>

<servlet-mapping>
  <servlet-name>dispatcher</servlet-name>
  <url-pattern>/</url-pattern>
</servlet-mapping>

	<display-name>Welcome to Tomcat</display-name>
	<description>
     Welcome to Tomcat
  </description>

</web-app>
